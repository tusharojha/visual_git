{"version":3,"sources":["components/Header/Header.js","commands.js","pages/Home/Home.js","index.js"],"names":["MenuItem","props","className","currentPage","title","href","url","Header","useState","mobileMenuState","setMobileMenuState","sidebar","open","docked","onSetOpen","styles","background","style","padding","isOpen","menuClicked","width","height","strokeWidth","rotate","color","borderRadius","animationDuration","Git","state","initializedRepo","currentBranch","commands","tree","args","this","length","add","command","slice","commitMessage","forEach","i","replaceAll","generateCode","Math","random","toString","substr","id","commit","push","description","print","runCommand","initRepo","Home","git","setState","backgroundColor","hideTopBar","allowTabs","fontWeight","fontSize","exec","help","descriptions","msg","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc9fc45a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport HamburgerMenu from \"react-hamburger-menu\";\r\nimport Sidebar from \"react-sidebar\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst MenuItem = (props) => {\r\n  return (\r\n    <li className={props.currentPage == props.title ? \"active\" : \"\"}>\r\n      <a href={props.url}>{props.title}</a>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Header = (props) => {\r\n  const [mobileMenuState, setMobileMenuState] = useState(false);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"desktop\">\r\n        <ul>\r\n          <MenuItem title=\"Home\" url=\"#\" currentPage={props.currentPage} />\r\n          <MenuItem title=\"About\" url=\"#\" currentPage={props.currentPage} />\r\n          <MenuItem title=\"Tutorial\" url=\"#\" currentPage={props.currentPage} />\r\n          <li>\r\n            <div className=\"logo\">\r\n              <h2>Visual Git</h2>\r\n            </div>\r\n          </li>\r\n          <MenuItem title=\"Commands\" url=\"#\" currentPage={props.currentPage} />\r\n          <MenuItem\r\n            title=\"Source on GitHub\"\r\n            url=\"#\"\r\n            currentPage={props.currentPage}\r\n          />\r\n          <MenuItem title=\"Share\" url=\"#\" currentPage={props.currentPage} />\r\n        </ul>\r\n      </div>\r\n      <div className=\"mobile\">\r\n        <div className=\"logo\">\r\n          <h2>Visual Git</h2>\r\n        </div>\r\n        <Sidebar\r\n          sidebar={\r\n            <div className=\"drawerMenu\">\r\n              <ul>\r\n                <MenuItem\r\n                  title=\"Home\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n                <MenuItem\r\n                  title=\"About\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n                <MenuItem\r\n                  title=\"Tutorial\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n                <MenuItem\r\n                  title=\"Commands\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n                <MenuItem\r\n                  title=\"Source on GitHub\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n                <MenuItem\r\n                  title=\"Share\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n              </ul>\r\n            </div>\r\n          }\r\n          open={mobileMenuState}\r\n          docked={mobileMenuState}\r\n          onSetOpen={() => setMobileMenuState(!mobileMenuState)}\r\n          styles={{ sidebar: { background: \"white\" } }}\r\n        >\r\n          <div style={{ padding: 10 }}>\r\n            <HamburgerMenu\r\n              isOpen={mobileMenuState}\r\n              menuClicked={() => setMobileMenuState(!mobileMenuState)}\r\n              width={18}\r\n              height={15}\r\n              strokeWidth={2}\r\n              rotate={0}\r\n              color=\"black\"\r\n              borderRadius={0}\r\n              animationDuration={0.5}\r\n            />\r\n          </div>\r\n        </Sidebar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","class Git {\r\n  state = {\r\n    initializedRepo: false,\r\n    currentBranch: \"main\",\r\n    commands: [],\r\n    tree: {},\r\n  };\r\n\r\n  commit(args) {\r\n    if (this.state.initializedRepo == false)\r\n      return \"fatal: not a git repository (or any of the parent directories): .git\";\r\n    if (args.length == 0) return \"no parameters passed to git commit\";\r\n    if (args[0] == \"--am\") this.add();\r\n    if (\r\n      this.state.commands.length == 0 ||\r\n      this.state.commands[this.state.commands.length - 1].command != \"add\"\r\n    )\r\n      return \"no changes added to commit\";\r\n    if (args[0] == \"-m\" || args[0] == \"-am\") {\r\n      args = args.slice(1);\r\n      var commitMessage = \"\";\r\n      args.forEach((i) => {\r\n        commitMessage += i.replaceAll('\"', \"\") + \" \";\r\n      });\r\n      commitMessage.slice(0, commitMessage.length - 1);\r\n      var generateCode = Math.random().toString(36).slice(2).substr(0, 6);\r\n      this.state.tree[this.state.currentBranch] = {\r\n        id: generateCode,\r\n        commit: commitMessage,\r\n      };\r\n      this.state.commands.push({\r\n        command: \"commit\",\r\n        description: \"commit added\",\r\n      });\r\n      return (\r\n        generateCode +\r\n        \" commit added to the \" +\r\n        this.state.currentBranch +\r\n        \" branch\"\r\n      );\r\n    } else {\r\n      return \"git commit \" + args[0] + \": not found.\";\r\n    }\r\n  }\r\n\r\n  add() {\r\n    if (this.state.initializedRepo == true) {\r\n      this.state.commands.push({\r\n        command: \"add\",\r\n        description: \"added unstaged changes\",\r\n      });\r\n      return \"added unstaged changes\";\r\n    }\r\n    return \"fatal: not a git repository (or any of the parent directories): .git\";\r\n  }\r\n\r\n  initRepo() {\r\n    if (this.state.initializedRepo == false) {\r\n      this.state.initializedRepo = true;\r\n      return \"Initialized empty Git repository.\";\r\n    } else {\r\n      return \"Re-initialized git repository.\";\r\n    }\r\n  }\r\n\r\n  exec(args, print, runCommand) {\r\n    const command = args[0];\r\n    switch (command) {\r\n      case \"init\":\r\n        print(this.initRepo());\r\n        break;\r\n      case \"add\":\r\n        print(this.add());\r\n        break;\r\n      case \"commit\":\r\n        print(this.commit(args.slice(1)));\r\n        break;\r\n      default:\r\n        print(\"No such git command.\");\r\n    }\r\n    return this.state;\r\n  }\r\n\r\n  help(print) {\r\n    print(\r\n      \"Help command version 0.0.1\\n git init : Create an empty Git repository or reinitialize an existing one \\n git add : Add file contents to the index \\n git commit : Record changes to the repository \\n git push : Update remote refs along with associated objects \\n git branch : List, create, or delete branches \\n git checkout : Switch branches or restore working tree files \\n git merge : Join two or more development histories together \\n git status : Show the working tree status\"\r\n    );\r\n  }\r\n}\r\n\r\nexport default Git;\r\n","import React, { useState } from \"react\";\r\nimport Terminal from \"terminal-in-react\";\r\n\r\nimport \"./home.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Git from \"../../commands\";\r\n\r\nconst Home = () => {\r\n  var git = new Git();\r\n  const [state, setState] = useState({});\r\n\r\n  return (\r\n    <div>\r\n      <Header currentPage=\"Home\" />\r\n      <div className=\"body\">\r\n        <div className=\"terminal\">\r\n          <Terminal\r\n            color=\"white\"\r\n            backgroundColor=\"black\"\r\n            hideTopBar={true}\r\n            allowTabs={false}\r\n            style={{ fontWeight: \"bold\", fontSize: \"1em\" }}\r\n            commands={{\r\n              git: (args, print, runCommand) =>\r\n                setState(git.exec(args.slice(1), print, runCommand)),\r\n              help: (args, print, runCommand) => {\r\n                git.help(print);\r\n              },\r\n            }}\r\n            descriptions={{\r\n              \"git init\":\r\n                \"Create an empty Git repository or reinitialize an existing one\",\r\n              \"git add\": \"Add file contents to the index\",\r\n              \"git commit\": \"Record changes to the repository\",\r\n              \"git push\": \"Update remote refs along with associated objects\",\r\n              \"git branch\": \"List, create, or delete branches\",\r\n              \"git checkout\": \"Switch branches or restore working tree files\",\r\n              \"git merge\": \"Join two or more development histories together\",\r\n              \"git status\": \"Show the working tree status\",\r\n            }}\r\n            msg=\"Welcome to Git Console! Start by initializing a git repository.\"\r\n          />\r\n        </div>\r\n        <div className=\"visual\">\r\n          <p>Tree</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Home from \"./pages/Home/Home\";\r\n\r\nReactDOM.render(<Home />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}