{"version":3,"sources":["components/Header/Header.js","commands.js","pages/Home/Home.js","index.js"],"names":["MenuItem","props","className","currentPage","title","href","url","Header","useState","mobileMenuState","setMobileMenuState","sidebar","open","docked","onSetOpen","styles","background","style","padding","isOpen","menuClicked","width","height","strokeWidth","rotate","color","borderRadius","animationDuration","Git","state","initializedRepo","currentBranch","branches","name","head","commands","tree","message","this","forEach","i","args","length","listAllBranches","branchName","findIndex","filter","v","push","id","add","command","slice","commitMessage","replaceAll","generateCode","Math","random","toString","substr","commits","commit","lastCommit","console","log","description","print","runCommand","initRepo","branch","Home","git","setState","backgroundColor","hideTopBar","allowTabs","promptSymbol","fontWeight","fontSize","exec","help","descriptions","msg","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cfd56ca.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport HamburgerMenu from \"react-hamburger-menu\";\r\nimport Sidebar from \"react-sidebar\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst MenuItem = (props) => {\r\n  return (\r\n    <li className={props.currentPage == props.title ? \"active\" : \"\"}>\r\n      <a href={props.url}>{props.title}</a>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Header = (props) => {\r\n  const [mobileMenuState, setMobileMenuState] = useState(false);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"desktop\">\r\n        <ul>\r\n          <MenuItem title=\"Home\" url=\"#\" currentPage={props.currentPage} />\r\n          <MenuItem title=\"About\" url=\"#\" currentPage={props.currentPage} />\r\n          <MenuItem title=\"Tutorial\" url=\"#\" currentPage={props.currentPage} />\r\n          <li>\r\n            <div className=\"logo\">\r\n              <h2>Visual Git</h2>\r\n            </div>\r\n          </li>\r\n          <MenuItem title=\"Commands\" url=\"#\" currentPage={props.currentPage} />\r\n          <MenuItem\r\n            title=\"Source on GitHub\"\r\n            url=\"#\"\r\n            currentPage={props.currentPage}\r\n          />\r\n          <MenuItem title=\"Share\" url=\"#\" currentPage={props.currentPage} />\r\n        </ul>\r\n      </div>\r\n      <div className=\"mobile\">\r\n        <div className=\"logo\">\r\n          <h2>Visual Git</h2>\r\n        </div>\r\n        <Sidebar\r\n          sidebar={\r\n            <div className=\"drawerMenu\">\r\n              <ul>\r\n                <MenuItem\r\n                  title=\"Home\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n                <MenuItem\r\n                  title=\"About\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n                <MenuItem\r\n                  title=\"Tutorial\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n                <MenuItem\r\n                  title=\"Commands\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n                <MenuItem\r\n                  title=\"Source on GitHub\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n                <MenuItem\r\n                  title=\"Share\"\r\n                  url=\"#\"\r\n                  currentPage={props.currentPage}\r\n                />\r\n              </ul>\r\n            </div>\r\n          }\r\n          open={mobileMenuState}\r\n          docked={mobileMenuState}\r\n          onSetOpen={() => setMobileMenuState(!mobileMenuState)}\r\n          styles={{ sidebar: { background: \"white\" } }}\r\n        >\r\n          <div style={{ padding: 10 }}>\r\n            <HamburgerMenu\r\n              isOpen={mobileMenuState}\r\n              menuClicked={() => setMobileMenuState(!mobileMenuState)}\r\n              width={18}\r\n              height={15}\r\n              strokeWidth={2}\r\n              rotate={0}\r\n              color=\"black\"\r\n              borderRadius={0}\r\n              animationDuration={0.5}\r\n            />\r\n          </div>\r\n        </Sidebar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","class Git {\r\n  state = {\r\n    initializedRepo: false,\r\n    currentBranch: \"main\",\r\n    branches: [{ name: \"main\", head: \"\" }],\r\n    commands: [],\r\n    tree: {},\r\n  };\r\n\r\n  listAllBranches() {\r\n    var message = \"\";\r\n    this.state.branches.forEach((i) => {\r\n      if (i.name == this.state.currentBranch) {\r\n        message += i.name + \" * \\n\";\r\n      } else {\r\n        message += i.name + \"\\n\";\r\n      }\r\n    });\r\n    return message;\r\n  }\r\n\r\n  branch(args) {\r\n    if (this.state.initializedRepo == false)\r\n      return \"fatal: not a git repository (or any of the parent directories): .git\";\r\n    if (args.length == 0) return this.listAllBranches();\r\n    if (args[0] == \"-a\") return this.listAllBranches();\r\n    if (args[0] == \"-d\") {\r\n      if (args.length < 2)\r\n        return \"git branch -d : branch name not passed as parameter\";\r\n      var branchName = args[1];\r\n      if (this.state.branches.findIndex((i) => i.name == branchName) == -1)\r\n        return \"git error: branch with name \" + branchName + \" doesn't exists\";\r\n      if (branchName == \"main\")\r\n        return \"cannot delete main branch of the git repository\";\r\n      else if (this.state.currentBranch == branchName)\r\n        this.state.currentBranch = \"main\";\r\n      this.state.branches = this.state.branches.filter(\r\n        (v) => v.name != branchName\r\n      );\r\n      delete this.state.tree[branchName];\r\n      return (\r\n        \"Deleted branch \" +\r\n        branchName +\r\n        \" from the git repository. \\nHead at \" +\r\n        this.state.currentBranch +\r\n        \" branch\"\r\n      );\r\n    }\r\n    var branchName = args[0];\r\n    if (this.state.branches.findIndex((i) => i.name == branchName) != -1)\r\n      return \"git error: branch with name \" + branchName + \" already exists\";\r\n    var currentBranch = this.state.tree[this.state.currentBranch];\r\n    this.state.branches.push({\r\n      name: branchName,\r\n      head:\r\n        currentBranch != null\r\n          ? currentBranch.length > 0\r\n            ? currentBranch[currentBranch.length - 1].id\r\n            : \"\"\r\n          : \"\",\r\n    });\r\n    this.state.tree[branchName] = [];\r\n    return \"created new branch \" + branchName + \"\\n\" + this.listAllBranches();\r\n  }\r\n\r\n  commit(args) {\r\n    if (this.state.initializedRepo == false)\r\n      return \"fatal: not a git repository (or any of the parent directories): .git\";\r\n    if (args.length == 0) return \"no parameters passed to git commit\";\r\n    if (args[0] == \"-am\") this.add();\r\n    if (\r\n      this.state.commands.length == 0 ||\r\n      this.state.commands[this.state.commands.length - 1].command != \"add\"\r\n    )\r\n      return \"no changes added to commit\";\r\n    if (args[0] == \"-m\" || args[0] == \"-am\") {\r\n      args = args.slice(1);\r\n      var commitMessage = \"\";\r\n      args.forEach((i) => {\r\n        commitMessage += i.replaceAll('\"', \"\") + \" \";\r\n      });\r\n      commitMessage.slice(0, commitMessage.length - 1);\r\n      var generateCode = Math.random().toString(36).slice(2).substr(0, 6);\r\n      var commits = this.state.tree[this.state.currentBranch] ?? [];\r\n      this.state.tree[this.state.currentBranch] = [\r\n        ...commits,\r\n        {\r\n          id: generateCode,\r\n          commit: commitMessage,\r\n          lastCommit:\r\n            commits != null\r\n              ? commits.length > 0\r\n                ? commits[commits.length - 1].id\r\n                : \"\"\r\n              : \"\",\r\n        },\r\n      ];\r\n      console.log(this.state);\r\n      this.state.commands.push({\r\n        command: \"commit\",\r\n        description: \"commit added\",\r\n      });\r\n      return (\r\n        generateCode +\r\n        \" commit added to the \" +\r\n        this.state.currentBranch +\r\n        \" branch\"\r\n      );\r\n    } else {\r\n      return \"git commit \" + args[0] + \": not found.\";\r\n    }\r\n  }\r\n\r\n  add() {\r\n    if (this.state.initializedRepo == true) {\r\n      this.state.commands.push({\r\n        command: \"add\",\r\n        description: \"added unstaged changes\",\r\n      });\r\n      return \"added unstaged changes\";\r\n    }\r\n    return \"fatal: not a git repository (or any of the parent directories): .git\";\r\n  }\r\n\r\n  initRepo() {\r\n    if (this.state.initializedRepo == false) {\r\n      this.state.initializedRepo = true;\r\n      return \"Initialized empty Git repository.\";\r\n    } else {\r\n      return \"Re-initialized git repository.\";\r\n    }\r\n  }\r\n\r\n  exec(args, print, runCommand) {\r\n    const command = args[0];\r\n    switch (command) {\r\n      case \"init\":\r\n        print(this.initRepo());\r\n        break;\r\n      case \"add\":\r\n        print(this.add());\r\n        break;\r\n      case \"commit\":\r\n        print(this.commit(args.slice(1)));\r\n        break;\r\n      case \"branch\":\r\n        print(this.branch(args.slice(1)));\r\n        break;\r\n      default:\r\n        print(\"No such git command.\");\r\n    }\r\n    return this.state;\r\n  }\r\n\r\n  help(print) {\r\n    print(\r\n      \"Help command version 0.0.1\\n git init : Create an empty Git repository or reinitialize an existing one \\n git add : Add file contents to the index \\n git commit : Record changes to the repository \\n git push : Update remote refs along with associated objects \\n git branch : List, create, or delete branches \\n git checkout : Switch branches or restore working tree files \\n git merge : Join two or more development histories together \\n git status : Show the working tree status\"\r\n    );\r\n  }\r\n}\r\n\r\nexport default Git;\r\n","import React, { useState } from \"react\";\r\nimport Terminal from \"terminal-in-react\";\r\n\r\nimport \"./home.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Git from \"../../commands\";\r\n\r\nconst Home = () => {\r\n  var git = new Git();\r\n  const [state, setState] = useState({});\r\n\r\n  return (\r\n    <div>\r\n      <Header currentPage=\"Home\" />\r\n      <div className=\"body\">\r\n        <div className=\"terminal\">\r\n          <Terminal\r\n            color=\"white\"\r\n            backgroundColor=\"black\"\r\n            hideTopBar={true}\r\n            allowTabs={false}\r\n            promptSymbol=\"$\"\r\n            style={{ fontWeight: \"bold\", fontSize: \"1em\" }}\r\n            commands={{\r\n              git: (args, print, runCommand) =>\r\n                setState(git.exec(args.slice(1), print, runCommand)),\r\n              help: (args, print, runCommand) => {\r\n                git.help(print);\r\n              },\r\n            }}\r\n            descriptions={{\r\n              \"git init\":\r\n                \"Create an empty Git repository or reinitialize an existing one\",\r\n              \"git add\": \"Add file contents to the index\",\r\n              \"git commit\": \"Record changes to the repository\",\r\n              \"git push\": \"Update remote refs along with associated objects\",\r\n              \"git branch\": \"List, create, or delete branches\",\r\n              \"git checkout\": \"Switch branches or restore working tree files\",\r\n              \"git merge\": \"Join two or more development histories together\",\r\n              \"git status\": \"Show the working tree status\",\r\n            }}\r\n            msg=\"Welcome to Git Console! Start by initializing a git repository.\"\r\n          />\r\n        </div>\r\n        <div className=\"visual\">\r\n          <p>Tree</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Home from \"./pages/Home/Home\";\r\n\r\nReactDOM.render(<Home />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}